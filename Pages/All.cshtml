@page
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@model AllModel
@{
    var serializerSettings = new JsonSerializerSettings { ContractResolver = new DefaultContractResolver { NamingStrategy = new CamelCaseNamingStrategy() }};
    ViewData["Title"] = "All";
}

@if(Model.Graphs.Any())
{
    <div id="loading" class="text-center" style="margin-top:40px;">Getting some coffee. Be right back...</div>
    <div id="app" class="text-center" style="margin:0 auto;display:none;">
        <div style="width:70%;margin: 10px auto!important;">
            <input v-model="search" class="form-control" placeholder="Filter to character...">
        </div>
        <div class="row">
            <div v-for="g in filteredGraphs" class="col-sm-12 col-md-12" style="background-color:#202225;margin:0;padding:2px;border:solid 6px #36393F;border-radius:4px;margin:0 auto;">
                <a style="text-decoration:none;color:#fff;" :href="`experience/${g.name}`">
                <h5 class="no-drag text-center">{{ g.name }} - {{ g.circle }} {{ g.guild }}</h5>
                <br/>
                <line-chart :data="g.graphs" :colors="[g.graphs.color]" :legend="false" :curve="true" xtitle="Date" ytitle="Ranks" height="500px"></line-chart>
                </a>
            </div>
        </div>
    </div>
}
else 
{
    <br>
    <h3 class="text-center">You're not tracking anyone yet. Click Add to get started!</h3>
}

<div id="graphs" data-obj="@JsonConvert.SerializeObject(Model.Graphs, serializerSettings)"></div>
<script src="~/lib/vuejs/vue.js"></script>
<script src="~/lib/chartjs/chart.js"></script>
<script src="~/lib/vue-chartkick/chartkick.js"></script>
<script type="text/javascript">
    var app = new Vue({
        el: '#app',
        data: {
            graphs: JSON.parse(document.getElementById('graphs').dataset.obj),
            search: '',
            loaded: false
        },
        filters: {
            capitalising: function (data) {
                return data.charAt(0).toUpperCase() + data.slice(1)
            }
        },
        computed: {
            filteredGraphs: function () {
                return this.graphs
                .filter(this.filterByName)
            }
        },
        methods: {
            filterByName: function (graph) {
                if (this.search.length === 0) {
                    return true
                }

                return (graph.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1)
            }
        },
        mounted() {
            this.loaded = true
            document.getElementById('loading').style.display = 'none'
            document.getElementById('app').style.display = 'block'
        }
    })
    app.use(VueChartkick)
    app.mount("#app")
</script>